{"version":3,"sources":["components/Loader/Loader.tsx","LoadingError.tsx","PageNavLink.tsx","MainNav.tsx","PageNotFound.tsx","types/EnumPersonType.tsx","PersonLink.tsx","PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","LoadingError","PageNavLink","to","text","isActive","classNames","MainNav","role","PageNotFound","EnumPersonType","PersonLink","person","handlePersonClick","personType","isPresentInTable","slug","onClick","Name","sex","MotherName","PeoplePage","people","useState","selectedPerson","setSelectedPerson","personName","name","some","map","born","died","motherName","FatherName","fatherName","App","isLoading","setIsLoading","setPeople","useEffect","getUsers","fetch","response","json","responseData","alert","path","element","replace","length","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.784bc587.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader:React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const LoadingError:React.FC = () => (\n  <div className=\"block\">\n    <div className=\"box table-container\">\n      <>\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n\n      </>\n\n    </div>\n  </div>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface PageNavLinkProps {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink:React.FC<PageNavLinkProps> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item ', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const PageNotFound = () => (\n  <p>page not found</p>\n);\n","export enum EnumPersonType {\n  Name = 'name',\n  FatherName = 'fatherName',\n  MotherName = 'motherName',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { EnumPersonType } from './types/EnumPersonType';\nimport { Person } from './types/Person';\n\ninterface PersonLinkProps {\n  person: Person;\n  handlePersonClick: (name: string | null) => void;\n  personType: EnumPersonType;\n  isPresentInTable?: boolean;\n}\n\nexport const PersonLink: React.FC<PersonLinkProps> = (\n  {\n    person, handlePersonClick, personType, isPresentInTable = true,\n  },\n) => {\n  const handleClick = () => {\n    handlePersonClick(person[personType]);\n  };\n\n  return (\n    <>\n      {!isPresentInTable\n        ? person[personType] || '-'\n        : (\n          <Link\n            to={`/people/${person.slug}`}\n            onClick={handleClick}\n            className={classNames({\n              'has-text-danger': (personType === EnumPersonType.Name\n                && person.sex === 'f')\n                || personType === EnumPersonType.MotherName,\n            })}\n          >\n            {person[personType]}\n          </Link>\n        )}\n\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { EnumPersonType } from './types/EnumPersonType';\nimport { PersonLink } from './PersonLink';\nimport { Person } from './types';\n\ninterface PeoplePageProps {\n  people: Person[];\n}\n\nexport const PeoplePage:React.FC<PeoplePageProps> = ({ people }) => {\n  const [selectedPerson, setSelectedPerson] = useState<string | null>(null);\n\n  const handlePersonClick = (personName: string | null) => {\n    setSelectedPerson(personName);\n  };\n\n  const isPresentInTable = (name: string | null) => {\n    return people.some((person) => person.name === name);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.name}\n            className={selectedPerson === person.name\n              ? 'has-background-warning'\n              : ''}\n          >\n\n            <td>\n              <PersonLink\n                person={person}\n                handlePersonClick={handlePersonClick}\n                personType={EnumPersonType.Name}\n              />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              <PersonLink\n                person={person}\n                personType={EnumPersonType.MotherName}\n                isPresentInTable={isPresentInTable(person.motherName)}\n                handlePersonClick={handlePersonClick}\n              />\n            </td>\n            <td>\n              <PersonLink\n                person={person}\n                personType={EnumPersonType.FatherName}\n                isPresentInTable={isPresentInTable(person.fatherName)}\n                handlePersonClick={handlePersonClick}\n              />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Loader } from './components/Loader';\nimport { LoadingError } from './LoadingError';\nimport { MainNav } from './MainNav';\nimport { PageNotFound } from './PageNotFound';\nimport { PeoplePage } from './PeoplePage';\nimport { Person } from './types';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        setIsLoading(true);\n\n        const response = await fetch(\n          'https://mate-academy.github.io/react_people-table/api/people.json',\n        );\n\n        const responseData = await response.json();\n\n        setPeople(responseData);\n      } catch (error) {\n        // eslint-disable-next-line no-alert\n        alert('error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getUsers();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <Routes>\n\n            <Route\n              path=\"people\"\n              element={(\n                <>\n                  <h1 className=\"title\">People Page</h1>\n                  <PeoplePage people={people} />\n                </>\n              )}\n            >\n              <Route\n                path=\":personSlug\"\n                element={(<h1 className=\"title\">Andrey</h1>)}\n              />\n            </Route>\n\n            <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n\n          {isLoading && <Loader />}\n          {!people.length && <LoadingError />}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}